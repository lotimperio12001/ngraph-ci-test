"{'deselected': [<TestCaseFunction test_abs_cuda>, <TestCaseFunction test_acos_cuda>, <TestCaseFunction test_acos_example_cuda>, <TestCaseFunction test_acosh_cuda>, <TestCaseFunction test_acosh_example_cuda>, <TestCaseFunction test_add_bcast_cuda>, <TestCaseFunction test_add_cuda>, <TestCaseFunction test_and2d_cuda>, <TestCaseFunction test_and3d_cuda>, <TestCaseFunction test_and4d_cuda>, <TestCaseFunction test_and_bcast3v1d_cuda>, <TestCaseFunction test_and_bcast3v2d_cuda>, <TestCaseFunction test_and_bcast4v2d_cuda>, <TestCaseFunction test_and_bcast4v3d_cuda>, <TestCaseFunction test_and_bcast4v4d_cuda>, <TestCaseFunction test_argmax_default_axis_example_cuda>, <TestCaseFunction test_argmax_default_axis_random_cuda>, <TestCaseFunction test_argmax_keepdims_example_cuda>, <TestCaseFunction test_argmax_keepdims_random_cuda>, <TestCaseFunction test_argmax_no_keepdims_example_cuda>, <TestCaseFunction test_argmax_no_keepdims_random_cuda>, <TestCaseFunction test_argmin_default_axis_example_cuda>, <TestCaseFunction test_argmin_default_axis_random_cuda>, <TestCaseFunction test_argmin_keepdims_example_cuda>, <TestCaseFunction test_argmin_keepdims_random_cuda>, <TestCaseFunction test_argmin_no_keepdims_example_cuda>, <TestCaseFunction test_argmin_no_keepdims_random_cuda>, <TestCaseFunction test_asin_cuda>, <TestCaseFunction test_asin_example_cuda>, <TestCaseFunction test_asinh_cuda>, <TestCaseFunction test_asinh_example_cuda>, <TestCaseFunction test_atan_cuda>, <TestCaseFunction test_atan_example_cuda>, <TestCaseFunction test_atanh_cuda>, <TestCaseFunction test_atanh_example_cuda>, <TestCaseFunction test_averagepool_1d_default_cuda>, <TestCaseFunction test_averagepool_2d_ceil_cuda>, <TestCaseFunction test_averagepool_2d_default_cuda>, <TestCaseFunction test_averagepool_2d_pads_count_include_pad_cuda>, <TestCaseFunction test_averagepool_2d_pads_cuda>, <TestCaseFunction test_averagepool_2d_precomputed_pads_count_include_pad_cuda>, <TestCaseFunction test_averagepool_2d_precomputed_pads_cuda>, <TestCaseFunction test_averagepool_2d_precomputed_same_upper_cuda>, <TestCaseFunction test_averagepool_2d_precomputed_strides_cuda>, <TestCaseFunction test_averagepool_2d_same_lower_cuda>, <TestCaseFunction test_averagepool_2d_same_upper_cuda>, <TestCaseFunction test_averagepool_2d_strides_cuda>, <TestCaseFunction test_averagepool_3d_default_cuda>, <TestCaseFunction test_basic_conv_with_padding_cuda>, <TestCaseFunction test_basic_conv_without_padding_cuda>, <TestCaseFunction test_basic_convinteger_cuda>, <TestCaseFunction test_batchnorm_epsilon_cuda>, <TestCaseFunction test_batchnorm_example_cuda>, <TestCaseFunction test_cast_DOUBLE_to_FLOAT16_cuda>, <TestCaseFunction test_cast_DOUBLE_to_FLOAT_cuda>, <TestCaseFunction test_cast_FLOAT16_to_DOUBLE_cuda>, <TestCaseFunction test_cast_FLOAT16_to_FLOAT_cuda>, <TestCaseFunction test_cast_FLOAT_to_DOUBLE_cuda>, <TestCaseFunction test_cast_FLOAT_to_FLOAT16_cuda>, <TestCaseFunction test_cast_FLOAT_to_STRING_cuda>, <TestCaseFunction test_cast_STRING_to_FLOAT_cuda>, <TestCaseFunction test_ceil_cuda>, <TestCaseFunction test_ceil_example_cuda>, <TestCaseFunction test_clip_cuda>, <TestCaseFunction test_clip_default_inbounds_cuda>, <TestCaseFunction test_clip_default_max_cuda>, <TestCaseFunction test_clip_default_min_cuda>, <TestCaseFunction test_clip_example_cuda>, <TestCaseFunction test_clip_inbounds_cuda>, <TestCaseFunction test_clip_outbounds_cuda>, <TestCaseFunction test_clip_splitbounds_cuda>, <TestCaseFunction test_compress_0_cuda>, <TestCaseFunction test_compress_1_cuda>, <TestCaseFunction test_compress_default_axis_cuda>, <TestCaseFunction test_concat_1d_axis_0_cuda>, <TestCaseFunction test_concat_2d_axis_0_cuda>, <TestCaseFunction test_concat_2d_axis_1_cuda>, <TestCaseFunction test_concat_3d_axis_0_cuda>, <TestCaseFunction test_concat_3d_axis_1_cuda>, <TestCaseFunction test_concat_3d_axis_2_cuda>, <TestCaseFunction test_constant_cuda>, <TestCaseFunction test_constant_pad_cuda>, <TestCaseFunction test_constantofshape_float_ones_cuda>, <TestCaseFunction test_constantofshape_int_zeros_cuda>, <TestCaseFunction test_conv_with_strides_and_asymmetric_padding_cuda>, <TestCaseFunction test_conv_with_strides_no_padding_cuda>, <TestCaseFunction test_conv_with_strides_padding_cuda>, <TestCaseFunction test_convinteger_with_padding_cuda>, <TestCaseFunction test_convtranspose_1d_cuda>, <TestCaseFunction test_convtranspose_3d_cuda>, <TestCaseFunction test_convtranspose_cuda>, <TestCaseFunction test_convtranspose_dilations_cuda>, <TestCaseFunction test_convtranspose_kernel_shape_cuda>, <TestCaseFunction test_convtranspose_output_shape_cuda>, <TestCaseFunction test_convtranspose_pad_cuda>, <TestCaseFunction test_convtranspose_pads_cuda>, <TestCaseFunction test_convtranspose_with_kernel_cuda>, <TestCaseFunction test_cos_cuda>, <TestCaseFunction test_cos_example_cuda>, <TestCaseFunction test_cosh_cuda>, <TestCaseFunction test_cosh_example_cuda>, <TestCaseFunction test_depthtospace_cuda>, <TestCaseFunction test_depthtospace_example_cuda>, <TestCaseFunction test_dequantizelinear_cuda>, <TestCaseFunction test_div_bcast_cuda>, <TestCaseFunction test_div_cuda>, <TestCaseFunction test_div_example_cuda>, <TestCaseFunction test_dropout_default_cuda>, <TestCaseFunction test_dropout_random_cuda>, <TestCaseFunction test_edge_pad_cuda>, <TestCaseFunction test_elu_cuda>, <TestCaseFunction test_elu_default_cuda>, <TestCaseFunction test_elu_example_cuda>, <TestCaseFunction test_equal_bcast_cuda>, <TestCaseFunction test_equal_cuda>, <TestCaseFunction test_erf_cuda>, <TestCaseFunction test_exp_cuda>, <TestCaseFunction test_exp_example_cuda>, <TestCaseFunction test_expand_dim_changed_cuda>, <TestCaseFunction test_expand_dim_unchanged_cuda>, <TestCaseFunction test_eyelike_populate_off_main_diagonal_cuda>, <TestCaseFunction test_eyelike_with_dtype_cuda>, <TestCaseFunction test_eyelike_without_dtype_cuda>, <TestCaseFunction test_flatten_axis0_cuda>, <TestCaseFunction test_flatten_axis1_cuda>, <TestCaseFunction test_flatten_axis2_cuda>, <TestCaseFunction test_flatten_axis3_cuda>, <TestCaseFunction test_flatten_default_axis_cuda>, <TestCaseFunction test_floor_cuda>, <TestCaseFunction test_floor_example_cuda>, <TestCaseFunction test_gather_0_cuda>, <TestCaseFunction test_gather_1_cuda>, <TestCaseFunction test_gemm_broadcast_cuda>, <TestCaseFunction test_gemm_nobroadcast_cuda>, <TestCaseFunction test_globalaveragepool_cuda>, <TestCaseFunction test_globalaveragepool_precomputed_cuda>, <TestCaseFunction test_globalmaxpool_cuda>, <TestCaseFunction test_globalmaxpool_precomputed_cuda>, <TestCaseFunction test_greater_bcast_cuda>, <TestCaseFunction test_greater_cuda>, <TestCaseFunction test_gru_defaults_cuda>, <TestCaseFunction test_gru_seq_length_cuda>, <TestCaseFunction test_gru_with_initial_bias_cuda>, <TestCaseFunction test_hardmax_axis_0_cuda>, <TestCaseFunction test_hardmax_axis_1_cuda>, <TestCaseFunction test_hardmax_axis_2_cuda>, <TestCaseFunction test_hardmax_default_axis_cuda>, <TestCaseFunction test_hardmax_example_cuda>, <TestCaseFunction test_hardmax_one_hot_cuda>, <TestCaseFunction test_hardsigmoid_cuda>, <TestCaseFunction test_hardsigmoid_default_cuda>, <TestCaseFunction test_hardsigmoid_example_cuda>, <TestCaseFunction test_identity_cuda>, <TestCaseFunction test_instancenorm_epsilon_cuda>, <TestCaseFunction test_instancenorm_example_cuda>, <TestCaseFunction test_isinf_cuda>, <TestCaseFunction test_isinf_negative_cuda>, <TestCaseFunction test_isinf_positive_cuda>, <TestCaseFunction test_isnan_cuda>, <TestCaseFunction test_leakyrelu_cuda>, <TestCaseFunction test_leakyrelu_default_cuda>, <TestCaseFunction test_leakyrelu_example_cuda>, <TestCaseFunction test_less_bcast_cuda>, <TestCaseFunction test_less_cuda>, <TestCaseFunction test_log_cuda>, <TestCaseFunction test_log_example_cuda>, <TestCaseFunction test_logsoftmax_axis_0_cuda>, <TestCaseFunction test_logsoftmax_axis_1_cuda>, <TestCaseFunction test_logsoftmax_axis_2_cuda>, <TestCaseFunction test_logsoftmax_default_axis_cuda>, <TestCaseFunction test_logsoftmax_example_1_cuda>, <TestCaseFunction test_logsoftmax_large_number_cuda>, <TestCaseFunction test_lrn_cuda>, <TestCaseFunction test_lrn_default_cuda>, <TestCaseFunction test_lstm_defaults_cuda>, <TestCaseFunction test_lstm_with_initial_bias_cuda>, <TestCaseFunction test_lstm_with_peepholes_cuda>, <TestCaseFunction test_matmul_2d_cuda>, <TestCaseFunction test_matmul_3d_cuda>, <TestCaseFunction test_matmul_4d_cuda>, <TestCaseFunction test_matmulinteger_cuda>, <TestCaseFunction test_max_example_cuda>, <TestCaseFunction test_max_one_input_cuda>, <TestCaseFunction test_max_two_inputs_cuda>, <TestCaseFunction test_maxpool_1d_default_cuda>, <TestCaseFunction test_maxpool_2d_ceil_cuda>, <TestCaseFunction test_maxpool_2d_default_cuda>, <TestCaseFunction test_maxpool_2d_dilations_cuda>, <TestCaseFunction test_maxpool_2d_pads_cuda>, <TestCaseFunction test_maxpool_2d_precomputed_pads_cuda>, <TestCaseFunction test_maxpool_2d_precomputed_same_upper_cuda>, <TestCaseFunction test_maxpool_2d_precomputed_strides_cuda>, <TestCaseFunction test_maxpool_2d_same_lower_cuda>, <TestCaseFunction test_maxpool_2d_same_upper_cuda>, <TestCaseFunction test_maxpool_2d_strides_cuda>, <TestCaseFunction test_maxpool_3d_default_cuda>, <TestCaseFunction test_maxpool_with_argmax_2d_precomputed_pads_cuda>, <TestCaseFunction test_maxpool_with_argmax_2d_precomputed_strides_cuda>, <TestCaseFunction test_maxunpool_export_with_output_shape_cuda>, <TestCaseFunction test_maxunpool_export_without_output_shape_cuda>, <TestCaseFunction test_mean_example_cuda>, <TestCaseFunction test_mean_one_input_cuda>, <TestCaseFunction test_mean_two_inputs_cuda>, <TestCaseFunction test_min_example_cuda>, <TestCaseFunction test_min_one_input_cuda>, <TestCaseFunction test_min_two_inputs_cuda>, <TestCaseFunction test_mod_bcast_cuda>, <TestCaseFunction test_mod_float_mixed_sign_example_cuda>, <TestCaseFunction test_mod_fmod_mixed_sign_example_cuda>, <TestCaseFunction test_mod_int64_mixed_sign_example_cuda>, <TestCaseFunction test_mul_bcast_cuda>, <TestCaseFunction test_mul_cuda>, <TestCaseFunction test_mul_example_cuda>, <TestCaseFunction test_mvn_cuda>, <TestCaseFunction test_mvn_expanded_cuda>, <TestCaseFunction test_neg_cuda>, <TestCaseFunction test_neg_example_cuda>, <TestCaseFunction test_nonmaxsuppression_center_point_box_format_cuda>, <TestCaseFunction test_nonmaxsuppression_flipped_coordinates_cuda>, <TestCaseFunction test_nonmaxsuppression_identical_boxes_cuda>, <TestCaseFunction test_nonmaxsuppression_limit_output_size_cuda>, <TestCaseFunction test_nonmaxsuppression_single_box_cuda>, <TestCaseFunction test_nonmaxsuppression_suppress_by_IOU_and_scores_cuda>, <TestCaseFunction test_nonmaxsuppression_suppress_by_IOU_cuda>, <TestCaseFunction test_nonmaxsuppression_two_batches_cuda>, <TestCaseFunction test_nonmaxsuppression_two_classes_cuda>, <TestCaseFunction test_nonzero_example_cuda>, <TestCaseFunction test_not_2d_cuda>, <TestCaseFunction test_not_3d_cuda>, <TestCaseFunction test_not_4d_cuda>, <TestCaseFunction test_onehot_with_axis_cuda>, <TestCaseFunction test_onehot_without_axis_cuda>, <TestCaseFunction test_or2d_cuda>, <TestCaseFunction test_or3d_cuda>, <TestCaseFunction test_or4d_cuda>, <TestCaseFunction test_or_bcast3v1d_cuda>, <TestCaseFunction test_or_bcast3v2d_cuda>, <TestCaseFunction test_or_bcast4v2d_cuda>, <TestCaseFunction test_or_bcast4v3d_cuda>, <TestCaseFunction test_or_bcast4v4d_cuda>, <TestCaseFunction test_pow_bcast_array_cuda>, <TestCaseFunction test_pow_bcast_scalar_cuda>, <TestCaseFunction test_pow_cuda>, <TestCaseFunction test_pow_example_cuda>, <TestCaseFunction test_prelu_broadcast_cuda>, <TestCaseFunction test_prelu_example_cuda>, <TestCaseFunction test_qlinearconv_cuda>, <TestCaseFunction test_qlinearmatmul_2D_cuda>, <TestCaseFunction test_qlinearmatmul_3D_cuda>, <TestCaseFunction test_quantizelinear_cuda>, <TestCaseFunction test_reciprocal_cuda>, <TestCaseFunction test_reciprocal_example_cuda>, <TestCaseFunction test_reduce_l1_default_axes_keepdims_example_cuda>, <TestCaseFunction test_reduce_l1_default_axes_keepdims_random_cuda>, <TestCaseFunction test_reduce_l1_do_not_keepdims_example_cuda>, <TestCaseFunction test_reduce_l1_do_not_keepdims_random_cuda>, <TestCaseFunction test_reduce_l1_keep_dims_example_cuda>, <TestCaseFunction test_reduce_l1_keep_dims_random_cuda>, <TestCaseFunction test_reduce_l2_default_axes_keepdims_example_cuda>, <TestCaseFunction test_reduce_l2_default_axes_keepdims_random_cuda>, <TestCaseFunction test_reduce_l2_do_not_keepdims_example_cuda>, <TestCaseFunction test_reduce_l2_do_not_keepdims_random_cuda>, <TestCaseFunction test_reduce_l2_keep_dims_example_cuda>, <TestCaseFunction test_reduce_l2_keep_dims_random_cuda>, <TestCaseFunction test_reduce_log_sum_asc_axes_cuda>, <TestCaseFunction test_reduce_log_sum_cuda>, <TestCaseFunction test_reduce_log_sum_default_cuda>, <TestCaseFunction test_reduce_log_sum_desc_axes_cuda>, <TestCaseFunction test_reduce_log_sum_exp_default_axes_keepdims_example_cuda>, <TestCaseFunction test_reduce_log_sum_exp_default_axes_keepdims_random_cuda>, <TestCaseFunction test_reduce_log_sum_exp_do_not_keepdims_example_cuda>, <TestCaseFunction test_reduce_log_sum_exp_do_not_keepdims_random_cuda>, <TestCaseFunction test_reduce_log_sum_exp_keepdims_example_cuda>, <TestCaseFunction test_reduce_log_sum_exp_keepdims_random_cuda>, <TestCaseFunction test_reduce_max_default_axes_keepdim_example_cuda>, <TestCaseFunction test_reduce_max_default_axes_keepdims_random_cuda>, <TestCaseFunction test_reduce_max_do_not_keepdims_example_cuda>, <TestCaseFunction test_reduce_max_do_not_keepdims_random_cuda>, <TestCaseFunction test_reduce_max_keepdims_example_cuda>, <TestCaseFunction test_reduce_max_keepdims_random_cuda>, <TestCaseFunction test_reduce_mean_default_axes_keepdims_example_cuda>, <TestCaseFunction test_reduce_mean_default_axes_keepdims_random_cuda>, <TestCaseFunction test_reduce_mean_do_not_keepdims_example_cuda>, <TestCaseFunction test_reduce_mean_do_not_keepdims_random_cuda>, <TestCaseFunction test_reduce_mean_keepdims_example_cuda>, <TestCaseFunction test_reduce_mean_keepdimwas_random_cuda>, <TestCaseFunction test_reduce_min_default_axes_keepdims_example_cuda>, <TestCaseFunction test_reduce_min_default_axes_keepdims_random_cuda>, <TestCaseFunction test_reduce_min_do_not_keepdims_example_cuda>, <TestCaseFunction test_reduce_min_do_not_keepdims_random_cuda>, <TestCaseFunction test_reduce_min_keepdims_example_cuda>, <TestCaseFunction test_reduce_min_keepdims_random_cuda>, <TestCaseFunction test_reduce_prod_default_axes_keepdims_example_cuda>, <TestCaseFunction test_reduce_prod_default_axes_keepdims_random_cuda>, <TestCaseFunction test_reduce_prod_do_not_keepdims_example_cuda>, <TestCaseFunction test_reduce_prod_do_not_keepdims_random_cuda>, <TestCaseFunction test_reduce_prod_keepdims_example_cuda>, <TestCaseFunction test_reduce_prod_keepdims_random_cuda>, <TestCaseFunction test_reduce_sum_default_axes_keepdims_example_cuda>, <TestCaseFunction test_reduce_sum_default_axes_keepdims_random_cuda>, <TestCaseFunction test_reduce_sum_do_not_keepdims_example_cuda>, <TestCaseFunction test_reduce_sum_do_not_keepdims_random_cuda>, <TestCaseFunction test_reduce_sum_keepdims_example_cuda>, <TestCaseFunction test_reduce_sum_keepdims_random_cuda>, <TestCaseFunction test_reduce_sum_square_default_axes_keepdims_example_cuda>, <TestCaseFunction test_reduce_sum_square_default_axes_keepdims_random_cuda>, <TestCaseFunction test_reduce_sum_square_do_not_keepdims_example_cuda>, <TestCaseFunction test_reduce_sum_square_do_not_keepdims_random_cuda>, <TestCaseFunction test_reduce_sum_square_keepdims_example_cuda>, <TestCaseFunction test_reduce_sum_square_keepdims_random_cuda>, <TestCaseFunction test_reflect_pad_cuda>, <TestCaseFunction test_relu_cuda>, <TestCaseFunction test_reshape_extended_dims_cuda>, <TestCaseFunction test_reshape_negative_dim_cuda>, <TestCaseFunction test_reshape_one_dim_cuda>, <TestCaseFunction test_reshape_reduced_dims_cuda>, <TestCaseFunction test_reshape_reordered_dims_cuda>, <TestCaseFunction test_resize_downsample_linear_cuda>, <TestCaseFunction test_resize_downsample_nearest_cuda>, <TestCaseFunction test_resize_nearest_cuda>, <TestCaseFunction test_resize_upsample_linear_cuda>, <TestCaseFunction test_resize_upsample_nearest_cuda>, <TestCaseFunction test_reversesequence_batch_cuda>, <TestCaseFunction test_reversesequence_time_cuda>, <TestCaseFunction test_rnn_seq_length_cuda>, <TestCaseFunction test_roialign_cuda>, <TestCaseFunction test_scan9_sum_cuda>, <TestCaseFunction test_scan_sum_cuda>, <TestCaseFunction test_scatter_with_axis_cuda>, <TestCaseFunction test_scatter_without_axis_cuda>, <TestCaseFunction test_selu_cuda>, <TestCaseFunction test_selu_default_cuda>, <TestCaseFunction test_selu_example_cuda>, <TestCaseFunction test_shape_cuda>, <TestCaseFunction test_shape_example_cuda>, <TestCaseFunction test_shrink_hard_cuda>, <TestCaseFunction test_shrink_soft_cuda>, <TestCaseFunction test_sigmoid_cuda>, <TestCaseFunction test_sigmoid_example_cuda>, <TestCaseFunction test_sign_cuda>, <TestCaseFunction test_simple_rnn_defaults_cuda>, <TestCaseFunction test_simple_rnn_with_initial_bias_cuda>, <TestCaseFunction test_sin_cuda>, <TestCaseFunction test_sin_example_cuda>, <TestCaseFunction test_sinh_cuda>, <TestCaseFunction test_sinh_example_cuda>, <TestCaseFunction test_size_cuda>, <TestCaseFunction test_size_example_cuda>, <TestCaseFunction test_slice_cuda>, <TestCaseFunction test_slice_default_axes_cuda>, <TestCaseFunction test_slice_default_steps_cuda>, <TestCaseFunction test_slice_end_out_of_bounds_cuda>, <TestCaseFunction test_slice_neg_cuda>, <TestCaseFunction test_slice_neg_steps_cuda>, <TestCaseFunction test_slice_start_out_of_bounds_cuda>, <TestCaseFunction test_softmax_axis_0_cuda>, <TestCaseFunction test_softmax_axis_1_cuda>, <TestCaseFunction test_softmax_axis_2_cuda>, <TestCaseFunction test_softmax_default_axis_cuda>, <TestCaseFunction test_softmax_example_cuda>, <TestCaseFunction test_softmax_large_number_cuda>, <TestCaseFunction test_softplus_cuda>, <TestCaseFunction test_softplus_example_cuda>, <TestCaseFunction test_softsign_cuda>, <TestCaseFunction test_softsign_example_cuda>, <TestCaseFunction test_split_equal_parts_1d_cuda>, <TestCaseFunction test_split_equal_parts_2d_cuda>, <TestCaseFunction test_split_equal_parts_default_axis_cuda>, <TestCaseFunction test_split_variable_parts_1d_cuda>, <TestCaseFunction test_split_variable_parts_2d_cuda>, <TestCaseFunction test_split_variable_parts_default_axis_cuda>, <TestCaseFunction test_sqrt_cuda>, <TestCaseFunction test_sqrt_example_cuda>, <TestCaseFunction test_squeeze_cuda>, <TestCaseFunction test_strnormalizer_export_monday_casesensintive_lower_cuda>, <TestCaseFunction test_strnormalizer_export_monday_casesensintive_nochangecase_cuda>, <TestCaseFunction test_strnormalizer_export_monday_casesensintive_upper_cuda>, <TestCaseFunction test_strnormalizer_export_monday_empty_output_cuda>, <TestCaseFunction test_strnormalizer_export_monday_insensintive_upper_twodim_cuda>, <TestCaseFunction test_strnormalizer_nostopwords_nochangecase_cuda>, <TestCaseFunction test_sub_bcast_cuda>, <TestCaseFunction test_sub_cuda>, <TestCaseFunction test_sub_example_cuda>, <TestCaseFunction test_sum_example_cuda>, <TestCaseFunction test_sum_one_input_cuda>, <TestCaseFunction test_sum_two_inputs_cuda>, <TestCaseFunction test_tan_cuda>, <TestCaseFunction test_tan_example_cuda>, <TestCaseFunction test_tanh_cuda>, <TestCaseFunction test_tanh_example_cuda>, <TestCaseFunction test_tfidfvectorizer_tf_batch_onlybigrams_skip0_cuda>, <TestCaseFunction test_tfidfvectorizer_tf_batch_onlybigrams_skip5_cuda>, <TestCaseFunction test_tfidfvectorizer_tf_batch_uniandbigrams_skip5_cuda>, <TestCaseFunction test_tfidfvectorizer_tf_only_bigrams_skip0_cuda>, <TestCaseFunction test_tfidfvectorizer_tf_onlybigrams_levelempty_cuda>, <TestCaseFunction test_tfidfvectorizer_tf_onlybigrams_skip5_cuda>, <TestCaseFunction test_tfidfvectorizer_tf_uniandbigrams_skip5_cuda>, <TestCaseFunction test_thresholdedrelu_cuda>, <TestCaseFunction test_thresholdedrelu_default_cuda>, <TestCaseFunction test_thresholdedrelu_example_cuda>, <TestCaseFunction test_tile_cuda>, <TestCaseFunction test_tile_precomputed_cuda>, <TestCaseFunction test_top_k_cuda>, <TestCaseFunction test_transpose_all_permutations_0_cuda>, <TestCaseFunction test_transpose_all_permutations_1_cuda>, <TestCaseFunction test_transpose_all_permutations_2_cuda>, <TestCaseFunction test_transpose_all_permutations_3_cuda>, <TestCaseFunction test_transpose_all_permutations_4_cuda>, <TestCaseFunction test_transpose_all_permutations_5_cuda>, <TestCaseFunction test_transpose_default_cuda>, <TestCaseFunction test_unsqueeze_cuda>, <TestCaseFunction test_upsample_nearest_cuda>, <TestCaseFunction test_where_example_cuda>, <TestCaseFunction test_xor2d_cuda>, <TestCaseFunction test_xor3d_cuda>, <TestCaseFunction test_xor4d_cuda>, <TestCaseFunction test_xor_bcast3v1d_cuda>, <TestCaseFunction test_xor_bcast3v2d_cuda>, <TestCaseFunction test_xor_bcast4v2d_cuda>, <TestCaseFunction test_xor_bcast4v3d_cuda>, <TestCaseFunction test_xor_bcast4v4d_cuda>, <TestCaseFunction test_bvlc_alexnet_cuda>, <TestCaseFunction test_densenet121_cuda>, <TestCaseFunction test_inception_v1_cuda>, <TestCaseFunction test_inception_v2_cuda>, <TestCaseFunction test_resnet50_cuda>, <TestCaseFunction test_shufflenet_cuda>, <TestCaseFunction test_squeezenet_cuda>, <TestCaseFunction test_vgg19_cuda>, <TestCaseFunction test_zfnet512_cuda>, <TestCaseFunction test_expand_shape_model1_cuda>, <TestCaseFunction test_expand_shape_model2_cuda>, <TestCaseFunction test_expand_shape_model3_cuda>, <TestCaseFunction test_expand_shape_model4_cuda>, <TestCaseFunction test_shrink_cuda>, <TestCaseFunction test_sign_model_cuda>, <TestCaseFunction test_single_relu_model_cuda>, <TestCaseFunction test_strnorm_model_monday_casesensintive_lower_cuda>, <TestCaseFunction test_strnorm_model_monday_casesensintive_nochangecase_cuda>, <TestCaseFunction test_strnorm_model_monday_casesensintive_upper_cuda>, <TestCaseFunction test_strnorm_model_monday_empty_output_cuda>, <TestCaseFunction test_strnorm_model_monday_insensintive_upper_twodim_cuda>, <TestCaseFunction test_strnorm_model_nostopwords_nochangecase_cuda>, <TestCaseFunction test_AvgPool1d_cuda>, <TestCaseFunction test_AvgPool1d_stride_cuda>, <TestCaseFunction test_AvgPool2d_cuda>, <TestCaseFunction test_AvgPool2d_stride_cuda>, <TestCaseFunction test_AvgPool3d_cuda>, <TestCaseFunction test_AvgPool3d_stride1_pad0_gpu_input_cuda>, <TestCaseFunction test_AvgPool3d_stride_cuda>, <TestCaseFunction test_BatchNorm1d_3d_input_eval_cuda>, <TestCaseFunction test_BatchNorm2d_eval_cuda>, <TestCaseFunction test_BatchNorm2d_momentum_eval_cuda>, <TestCaseFunction test_BatchNorm3d_eval_cuda>, <TestCaseFunction test_BatchNorm3d_momentum_eval_cuda>, <TestCaseFunction test_ConstantPad2d_cuda>, <TestCaseFunction test_Conv1d_cuda>, <TestCaseFunction test_Conv1d_dilated_cuda>, <TestCaseFunction test_Conv1d_groups_cuda>, <TestCaseFunction test_Conv1d_pad1_cuda>, <TestCaseFunction test_Conv1d_pad1size1_cuda>, <TestCaseFunction test_Conv1d_pad2_cuda>, <TestCaseFunction test_Conv1d_pad2size1_cuda>, <TestCaseFunction test_Conv1d_stride_cuda>, <TestCaseFunction test_Conv2d_cuda>, <TestCaseFunction test_Conv2d_depthwise_cuda>, <TestCaseFunction test_Conv2d_depthwise_padded_cuda>, <TestCaseFunction test_Conv2d_depthwise_strided_cuda>, <TestCaseFunction test_Conv2d_depthwise_with_multiplier_cuda>, <TestCaseFunction test_Conv2d_dilated_cuda>, <TestCaseFunction test_Conv2d_groups_cuda>, <TestCaseFunction test_Conv2d_groups_thnn_cuda>, <TestCaseFunction test_Conv2d_no_bias_cuda>, <TestCaseFunction test_Conv2d_padding_cuda>, <TestCaseFunction test_Conv2d_strided_cuda>, <TestCaseFunction test_Conv3d_cuda>, <TestCaseFunction test_Conv3d_dilated_cuda>, <TestCaseFunction test_Conv3d_dilated_strided_cuda>, <TestCaseFunction test_Conv3d_groups_cuda>, <TestCaseFunction test_Conv3d_no_bias_cuda>, <TestCaseFunction test_Conv3d_stride_cuda>, <TestCaseFunction test_Conv3d_stride_padding_cuda>, <TestCaseFunction test_ConvTranspose2d_cuda>, <TestCaseFunction test_ConvTranspose2d_no_bias_cuda>, <TestCaseFunction test_ELU_cuda>, <TestCaseFunction test_Embedding_cuda>, <TestCaseFunction test_Embedding_sparse_cuda>, <TestCaseFunction test_GLU_cuda>, <TestCaseFunction test_GLU_dim_cuda>, <TestCaseFunction test_LeakyReLU_cuda>, <TestCaseFunction test_LeakyReLU_with_negval_cuda>, <TestCaseFunction test_Linear_cuda>, <TestCaseFunction test_Linear_no_bias_cuda>, <TestCaseFunction test_LogSoftmax_cuda>, <TestCaseFunction test_MaxPool1d_cuda>, <TestCaseFunction test_MaxPool1d_stride_cuda>, <TestCaseFunction test_MaxPool2d_cuda>, <TestCaseFunction test_MaxPool3d_cuda>, <TestCaseFunction test_MaxPool3d_stride_cuda>, <TestCaseFunction test_MaxPool3d_stride_padding_cuda>, <TestCaseFunction test_PReLU_1d_cuda>, <TestCaseFunction test_PReLU_1d_multiparam_cuda>, <TestCaseFunction test_PReLU_2d_cuda>, <TestCaseFunction test_PReLU_2d_multiparam_cuda>, <TestCaseFunction test_PReLU_3d_cuda>, <TestCaseFunction test_PReLU_3d_multiparam_cuda>, <TestCaseFunction test_PixelShuffle_cuda>, <TestCaseFunction test_PoissonNLLLLoss_no_reduce_cuda>, <TestCaseFunction test_ReLU_cuda>, <TestCaseFunction test_ReflectionPad2d_cuda>, <TestCaseFunction test_ReplicationPad2d_cuda>, <TestCaseFunction test_SELU_cuda>, <TestCaseFunction test_Sigmoid_cuda>, <TestCaseFunction test_Softmax_cuda>, <TestCaseFunction test_Softmin_cuda>, <TestCaseFunction test_Softplus_cuda>, <TestCaseFunction test_Softsign_cuda>, <TestCaseFunction test_Tanh_cuda>, <TestCaseFunction test_ZeroPad2d_cuda>, <TestCaseFunction test_log_softmax_dim3_cuda>, <TestCaseFunction test_log_softmax_lastdim_cuda>, <TestCaseFunction test_softmax_functional_dim3_cuda>, <TestCaseFunction test_softmax_lastdim_cuda>, <TestCaseFunction test_operator_add_broadcast_cuda>, <TestCaseFunction test_operator_add_size1_broadcast_cuda>, <TestCaseFunction test_operator_add_size1_right_broadcast_cuda>, <TestCaseFunction test_operator_add_size1_singleton_broadcast_cuda>, <TestCaseFunction test_operator_addconstant_cuda>, <TestCaseFunction test_operator_addmm_cuda>, <TestCaseFunction test_operator_basic_cuda>, <TestCaseFunction test_operator_chunk_cuda>, <TestCaseFunction test_operator_clip_cuda>, <TestCaseFunction test_operator_concat2_cuda>, <TestCaseFunction test_operator_conv_cuda>, <TestCaseFunction test_operator_convtranspose_cuda>, <TestCaseFunction test_operator_exp_cuda>, <TestCaseFunction test_operator_flatten_cuda>, <TestCaseFunction test_operator_index_cuda>, <TestCaseFunction test_operator_max_cuda>, <TestCaseFunction test_operator_maxpool_cuda>, <TestCaseFunction test_operator_min_cuda>, <TestCaseFunction test_operator_mm_cuda>, <TestCaseFunction test_operator_non_float_params_cuda>, <TestCaseFunction test_operator_pad_cuda>, <TestCaseFunction test_operator_params_cuda>, <TestCaseFunction test_operator_permute2_cuda>, <TestCaseFunction test_operator_pow_cuda>, <TestCaseFunction test_operator_reduced_mean_cuda>, <TestCaseFunction test_operator_reduced_mean_keepdim_cuda>, <TestCaseFunction test_operator_reduced_sum_cuda>, <TestCaseFunction test_operator_reduced_sum_keepdim_cuda>, <TestCaseFunction test_operator_repeat_cuda>, <TestCaseFunction test_operator_repeat_dim_overflow_cuda>, <TestCaseFunction test_operator_selu_cuda>, <TestCaseFunction test_operator_sqrt_cuda>, <TestCaseFunction test_operator_symbolic_override_cuda>, <TestCaseFunction test_operator_symbolic_override_nested_cuda>, <TestCaseFunction test_operator_view_cuda>], 'warnings': [WarningReport(message=\"/usr/local/lib/python3.6/dist-packages/past/translation/__init__.py:35: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses\\n  import imp\\n\", nodeid='', fslocation=('/usr/local/lib/python3.6/dist-packages/past/translation/__init__.py', 35)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/_pytest/mark/structures.py:332: PytestUnknownMarkWarning: Unknown pytest.mark.onnx_coverage - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/latest/mark.html\\n  PytestUnknownMarkWarning,\\n', nodeid='', fslocation=('/usr/local/lib/python3.6/dist-packages/_pytest/mark/structures.py', 332)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_ceil_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_basic_convinteger_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_cast_DOUBLE_to_FLOAT16_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_cast_DOUBLE_to_FLOAT_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT16_to_DOUBLE_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT16_to_FLOAT_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT_to_DOUBLE_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT_to_FLOAT16_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT_to_STRING_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_cast_STRING_to_FLOAT_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_convinteger_with_padding_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_dequantizelinear_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_isinf_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_isinf_negative_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_isinf_positive_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_matmulinteger_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_ceil_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_dilations_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_mod_bcast_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_mod_float_mixed_sign_example_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_mod_fmod_mixed_sign_example_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_mod_int64_mixed_sign_example_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_mvn_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_mvn_expanded_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_center_point_box_format_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_flipped_coordinates_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_identical_boxes_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_limit_output_size_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_single_box_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_suppress_by_IOU_and_scores_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_suppress_by_IOU_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_two_batches_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_two_classes_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_qlinearconv_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_qlinearmatmul_2D_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_qlinearmatmul_3D_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_quantizelinear_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_resize_downsample_linear_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_resize_downsample_nearest_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_resize_nearest_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_resize_upsample_linear_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_resize_upsample_nearest_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_reversesequence_batch_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_reversesequence_time_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_roialign_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_shrink_hard_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_shrink_soft_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_slice_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_slice_default_axes_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_slice_default_steps_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_slice_end_out_of_bounds_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_slice_neg_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_slice_neg_steps_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_slice_start_out_of_bounds_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_casesensintive_lower_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_casesensintive_nochangecase_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_casesensintive_upper_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_empty_output_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_insensintive_upper_twodim_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_nostopwords_nochangecase_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_thresholdedrelu_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_thresholdedrelu_default_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_thresholdedrelu_example_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendNodeModelTest::test_top_k_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendSimpleModelTest::test_shrink_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_casesensintive_lower_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_casesensintive_nochangecase_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_casesensintive_upper_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_empty_output_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_insensintive_upper_twodim_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698)), WarningReport(message='/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py:698: UserWarning: This version of onnx-caffe2 targets ONNX operator set version 9, but the model we are trying to import uses version 10.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\\n  warnings.warn(\"This version of onnx-caffe2 targets ONNX operator set version {}, but the model we are trying to import uses version {}.  We will try to import it anyway, but if the model uses operators which had BC-breaking changes in the intervening versions, import will fail.\".format(cls._known_opset_version, imp.version))\\n', nodeid='test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_nostopwords_nochangecase_cpu', fslocation=('/usr/local/lib/python3.6/dist-packages/caffe2/python/onnx/backend.py', 698))], '': [<TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_abs_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_abs_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_acos_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_acos_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_acos_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_acos_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_acosh_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_acosh_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_acosh_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_acosh_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_add_bcast_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_add_bcast_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_add_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_add_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and3d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and3d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and4d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and4d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and_bcast3v1d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and_bcast3v1d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and_bcast3v2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and_bcast3v2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and_bcast4v2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and_bcast4v2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and_bcast4v3d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and_bcast4v3d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and_bcast4v4d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and_bcast4v4d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmax_default_axis_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmax_default_axis_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmax_default_axis_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmax_default_axis_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmax_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmax_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmax_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmax_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmax_no_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmax_no_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmax_no_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmax_no_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmin_default_axis_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmin_default_axis_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmin_default_axis_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmin_default_axis_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmin_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmin_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmin_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmin_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmin_no_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmin_no_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmin_no_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmin_no_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_asin_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_asin_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_asin_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_asin_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_asinh_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_asinh_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_asinh_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_asinh_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_atan_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_atan_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_atan_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_atan_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_atanh_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_atanh_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_atanh_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_atanh_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_1d_default_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_1d_default_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_ceil_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_ceil_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_default_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_default_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_pads_count_include_pad_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_pads_count_include_pad_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_pads_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_pads_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_precomputed_pads_count_include_pad_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_precomputed_pads_count_include_pad_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_precomputed_pads_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_precomputed_pads_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_precomputed_same_upper_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_precomputed_same_upper_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_precomputed_strides_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_precomputed_strides_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_same_lower_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_same_lower_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_same_upper_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_same_upper_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_strides_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_strides_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_3d_default_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_3d_default_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_basic_conv_with_padding_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_basic_conv_with_padding_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_basic_conv_without_padding_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_basic_conv_without_padding_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_basic_convinteger_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_basic_convinteger_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_batchnorm_epsilon_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_batchnorm_epsilon_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_batchnorm_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_batchnorm_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_DOUBLE_to_FLOAT16_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_DOUBLE_to_FLOAT16_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_DOUBLE_to_FLOAT_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_DOUBLE_to_FLOAT_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT16_to_DOUBLE_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT16_to_DOUBLE_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT16_to_FLOAT_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT16_to_FLOAT_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT_to_DOUBLE_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT_to_DOUBLE_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT_to_FLOAT16_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT_to_FLOAT16_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT_to_STRING_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT_to_STRING_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_STRING_to_FLOAT_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_STRING_to_FLOAT_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_ceil_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_ceil_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_ceil_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_ceil_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_default_inbounds_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_default_inbounds_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_default_max_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_default_max_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_default_min_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_default_min_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_inbounds_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_inbounds_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_outbounds_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_outbounds_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_splitbounds_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_splitbounds_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_compress_0_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_compress_0_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_compress_1_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_compress_1_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_compress_default_axis_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_compress_default_axis_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_concat_1d_axis_0_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_concat_1d_axis_0_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_concat_2d_axis_0_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_concat_2d_axis_0_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_concat_2d_axis_1_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_concat_2d_axis_1_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_concat_3d_axis_0_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_concat_3d_axis_0_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_concat_3d_axis_1_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_concat_3d_axis_1_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_concat_3d_axis_2_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_concat_3d_axis_2_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_constant_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_constant_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_constant_pad_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_constant_pad_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_constantofshape_float_ones_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_constantofshape_float_ones_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_constantofshape_int_zeros_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_constantofshape_int_zeros_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_conv_with_strides_and_asymmetric_padding_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_conv_with_strides_and_asymmetric_padding_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_conv_with_strides_no_padding_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_conv_with_strides_no_padding_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_conv_with_strides_padding_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_conv_with_strides_padding_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convinteger_with_padding_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convinteger_with_padding_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_1d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_1d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_3d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_3d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_dilations_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_dilations_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_kernel_shape_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_kernel_shape_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_output_shape_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_output_shape_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_pad_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_pad_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_pads_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_pads_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_with_kernel_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_with_kernel_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cos_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cos_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cos_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cos_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cosh_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cosh_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cosh_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cosh_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_depthtospace_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_depthtospace_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_depthtospace_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_depthtospace_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_dequantizelinear_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_dequantizelinear_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_div_bcast_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_div_bcast_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_div_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_div_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_div_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_div_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_dropout_default_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_dropout_default_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_dropout_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_dropout_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_edge_pad_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_edge_pad_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_elu_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_elu_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_elu_default_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_elu_default_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_elu_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_elu_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_equal_bcast_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_equal_bcast_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_equal_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_equal_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_erf_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_erf_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_exp_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_exp_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_exp_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_exp_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_expand_dim_changed_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_expand_dim_changed_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_expand_dim_unchanged_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_expand_dim_unchanged_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_eyelike_populate_off_main_diagonal_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_eyelike_populate_off_main_diagonal_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_eyelike_with_dtype_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_eyelike_with_dtype_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_eyelike_without_dtype_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_eyelike_without_dtype_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_flatten_axis0_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_flatten_axis0_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_flatten_axis1_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_flatten_axis1_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_flatten_axis2_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_flatten_axis2_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_flatten_axis3_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_flatten_axis3_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_flatten_default_axis_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_flatten_default_axis_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_floor_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_floor_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_floor_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_floor_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gather_0_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gather_0_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gather_1_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gather_1_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gemm_broadcast_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gemm_broadcast_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gemm_nobroadcast_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gemm_nobroadcast_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_globalaveragepool_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_globalaveragepool_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_globalaveragepool_precomputed_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_globalaveragepool_precomputed_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_globalmaxpool_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_globalmaxpool_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_globalmaxpool_precomputed_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_globalmaxpool_precomputed_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_greater_bcast_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_greater_bcast_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_greater_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_greater_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gru_defaults_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gru_defaults_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gru_seq_length_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gru_seq_length_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gru_with_initial_bias_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gru_with_initial_bias_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardmax_axis_0_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardmax_axis_0_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardmax_axis_1_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardmax_axis_1_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardmax_axis_2_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardmax_axis_2_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardmax_default_axis_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardmax_default_axis_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardmax_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardmax_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardmax_one_hot_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardmax_one_hot_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardsigmoid_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardsigmoid_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardsigmoid_default_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardsigmoid_default_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardsigmoid_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardsigmoid_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_identity_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_identity_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_instancenorm_epsilon_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_instancenorm_epsilon_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_instancenorm_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_instancenorm_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_isinf_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_isinf_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_isinf_negative_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_isinf_negative_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_isinf_positive_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_isinf_positive_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_isnan_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_isnan_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_leakyrelu_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_leakyrelu_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_leakyrelu_default_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_leakyrelu_default_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_leakyrelu_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_leakyrelu_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_less_bcast_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_less_bcast_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_less_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_less_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_log_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_log_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_log_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_log_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_logsoftmax_axis_0_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_logsoftmax_axis_0_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_logsoftmax_axis_1_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_logsoftmax_axis_1_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_logsoftmax_axis_2_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_logsoftmax_axis_2_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_logsoftmax_default_axis_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_logsoftmax_default_axis_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_logsoftmax_example_1_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_logsoftmax_example_1_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_logsoftmax_large_number_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_logsoftmax_large_number_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_lrn_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_lrn_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_lrn_default_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_lrn_default_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_lstm_defaults_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_lstm_defaults_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_lstm_with_initial_bias_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_lstm_with_initial_bias_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_lstm_with_peepholes_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_lstm_with_peepholes_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_matmul_2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_matmul_2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_matmul_3d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_matmul_3d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_matmul_4d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_matmul_4d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_matmulinteger_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_matmulinteger_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_max_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_max_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_max_one_input_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_max_one_input_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_max_two_inputs_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_max_two_inputs_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_1d_default_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_1d_default_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_ceil_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_ceil_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_default_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_default_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_dilations_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_dilations_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_pads_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_pads_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_precomputed_pads_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_precomputed_pads_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_precomputed_same_upper_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_precomputed_same_upper_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_precomputed_strides_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_precomputed_strides_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_same_lower_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_same_lower_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_same_upper_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_same_upper_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_strides_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_strides_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_3d_default_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_3d_default_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_with_argmax_2d_precomputed_pads_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_with_argmax_2d_precomputed_pads_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_with_argmax_2d_precomputed_strides_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_with_argmax_2d_precomputed_strides_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxunpool_export_with_output_shape_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxunpool_export_with_output_shape_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxunpool_export_without_output_shape_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxunpool_export_without_output_shape_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mean_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mean_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mean_one_input_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mean_one_input_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mean_two_inputs_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mean_two_inputs_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_min_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_min_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_min_one_input_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_min_one_input_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_min_two_inputs_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_min_two_inputs_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mod_bcast_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mod_bcast_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mod_float_mixed_sign_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mod_float_mixed_sign_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mod_fmod_mixed_sign_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mod_fmod_mixed_sign_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mod_int64_mixed_sign_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mod_int64_mixed_sign_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mul_bcast_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mul_bcast_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mul_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mul_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mul_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mul_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mvn_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mvn_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mvn_expanded_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mvn_expanded_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_neg_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_neg_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_neg_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_neg_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_center_point_box_format_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_center_point_box_format_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_flipped_coordinates_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_flipped_coordinates_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_identical_boxes_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_identical_boxes_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_limit_output_size_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_limit_output_size_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_single_box_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_single_box_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_suppress_by_IOU_and_scores_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_suppress_by_IOU_and_scores_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_suppress_by_IOU_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_suppress_by_IOU_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_two_batches_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_two_batches_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_two_classes_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_two_classes_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonzero_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonzero_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_not_2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_not_2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_not_3d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_not_3d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_not_4d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_not_4d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_onehot_with_axis_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_onehot_with_axis_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_onehot_without_axis_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_onehot_without_axis_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or3d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or3d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or4d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or4d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or_bcast3v1d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or_bcast3v1d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or_bcast3v2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or_bcast3v2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or_bcast4v2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or_bcast4v2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or_bcast4v3d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or_bcast4v3d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or_bcast4v4d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or_bcast4v4d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_pow_bcast_array_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_pow_bcast_array_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_pow_bcast_scalar_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_pow_bcast_scalar_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_pow_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_pow_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_pow_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_pow_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_prelu_broadcast_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_prelu_broadcast_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_prelu_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_prelu_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_qlinearconv_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_qlinearconv_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_qlinearmatmul_2D_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_qlinearmatmul_2D_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_qlinearmatmul_3D_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_qlinearmatmul_3D_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_quantizelinear_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_quantizelinear_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reciprocal_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reciprocal_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reciprocal_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reciprocal_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l1_default_axes_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l1_default_axes_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l1_default_axes_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l1_default_axes_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l1_do_not_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l1_do_not_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l1_do_not_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l1_do_not_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l1_keep_dims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l1_keep_dims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l1_keep_dims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l1_keep_dims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l2_default_axes_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l2_default_axes_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l2_default_axes_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l2_default_axes_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l2_do_not_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l2_do_not_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l2_do_not_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l2_do_not_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l2_keep_dims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l2_keep_dims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l2_keep_dims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l2_keep_dims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_asc_axes_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_asc_axes_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_default_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_default_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_desc_axes_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_desc_axes_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_exp_default_axes_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_exp_default_axes_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_exp_default_axes_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_exp_default_axes_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_exp_do_not_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_exp_do_not_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_exp_do_not_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_exp_do_not_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_exp_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_exp_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_exp_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_exp_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_max_default_axes_keepdim_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_max_default_axes_keepdim_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_max_default_axes_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_max_default_axes_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_max_do_not_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_max_do_not_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_max_do_not_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_max_do_not_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_max_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_max_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_max_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_max_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_mean_default_axes_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_mean_default_axes_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_mean_default_axes_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_mean_default_axes_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_mean_do_not_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_mean_do_not_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_mean_do_not_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_mean_do_not_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_mean_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_mean_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_mean_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_mean_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_min_default_axes_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_min_default_axes_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_min_default_axes_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_min_default_axes_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_min_do_not_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_min_do_not_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_min_do_not_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_min_do_not_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_min_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_min_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_min_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_min_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_prod_default_axes_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_prod_default_axes_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_prod_default_axes_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_prod_default_axes_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_prod_do_not_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_prod_do_not_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_prod_do_not_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_prod_do_not_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_prod_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_prod_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_prod_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_prod_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_default_axes_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_default_axes_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_default_axes_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_default_axes_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_do_not_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_do_not_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_do_not_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_do_not_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_square_default_axes_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_square_default_axes_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_square_default_axes_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_square_default_axes_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_square_do_not_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_square_do_not_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_square_do_not_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_square_do_not_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_square_keepdims_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_square_keepdims_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_square_keepdims_random_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_square_keepdims_random_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reflect_pad_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reflect_pad_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_relu_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_relu_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reshape_extended_dims_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reshape_extended_dims_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reshape_negative_dim_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reshape_negative_dim_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reshape_one_dim_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reshape_one_dim_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reshape_reduced_dims_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reshape_reduced_dims_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reshape_reordered_dims_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reshape_reordered_dims_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_resize_downsample_linear_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_resize_downsample_linear_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_resize_downsample_nearest_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_resize_downsample_nearest_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_resize_nearest_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_resize_nearest_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_resize_upsample_linear_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_resize_upsample_linear_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_resize_upsample_nearest_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_resize_upsample_nearest_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reversesequence_batch_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reversesequence_batch_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reversesequence_time_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reversesequence_time_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_rnn_seq_length_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_rnn_seq_length_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_roialign_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_roialign_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_scan9_sum_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_scan9_sum_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_scan_sum_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_scan_sum_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_scatter_with_axis_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_scatter_with_axis_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_scatter_without_axis_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_scatter_without_axis_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_selu_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_selu_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_selu_default_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_selu_default_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_selu_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_selu_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_shape_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_shape_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_shape_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_shape_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_shrink_hard_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_shrink_hard_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_shrink_soft_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_shrink_soft_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sigmoid_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sigmoid_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sigmoid_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sigmoid_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sign_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sign_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_simple_rnn_defaults_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_simple_rnn_defaults_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_simple_rnn_with_initial_bias_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_simple_rnn_with_initial_bias_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sin_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sin_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sin_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sin_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sinh_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sinh_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sinh_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sinh_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_size_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_size_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_size_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_size_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_default_axes_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_default_axes_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_default_steps_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_default_steps_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_end_out_of_bounds_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_end_out_of_bounds_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_neg_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_neg_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_neg_steps_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_neg_steps_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_start_out_of_bounds_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_start_out_of_bounds_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softmax_axis_0_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softmax_axis_0_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softmax_axis_1_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softmax_axis_1_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softmax_axis_2_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softmax_axis_2_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softmax_default_axis_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softmax_default_axis_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softmax_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softmax_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softmax_large_number_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softmax_large_number_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softplus_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softplus_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softplus_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softplus_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softsign_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softsign_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softsign_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softsign_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_split_equal_parts_1d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_split_equal_parts_1d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_split_equal_parts_2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_split_equal_parts_2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_split_equal_parts_default_axis_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_split_equal_parts_default_axis_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_split_variable_parts_1d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_split_variable_parts_1d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_split_variable_parts_2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_split_variable_parts_2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_split_variable_parts_default_axis_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_split_variable_parts_default_axis_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sqrt_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sqrt_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sqrt_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sqrt_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_squeeze_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_squeeze_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_casesensintive_lower_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_casesensintive_lower_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_casesensintive_nochangecase_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_casesensintive_nochangecase_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_casesensintive_upper_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_casesensintive_upper_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_empty_output_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_empty_output_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_insensintive_upper_twodim_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_insensintive_upper_twodim_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_nostopwords_nochangecase_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_nostopwords_nochangecase_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sub_bcast_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sub_bcast_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sub_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sub_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sub_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sub_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sum_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sum_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sum_one_input_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sum_one_input_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sum_two_inputs_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sum_two_inputs_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tan_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tan_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tan_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tan_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tanh_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tanh_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tanh_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tanh_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_batch_onlybigrams_skip0_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_batch_onlybigrams_skip0_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_batch_onlybigrams_skip5_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_batch_onlybigrams_skip5_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_batch_uniandbigrams_skip5_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_batch_uniandbigrams_skip5_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_only_bigrams_skip0_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_only_bigrams_skip0_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_onlybigrams_levelempty_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_onlybigrams_levelempty_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_onlybigrams_skip5_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_onlybigrams_skip5_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_uniandbigrams_skip5_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_uniandbigrams_skip5_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_thresholdedrelu_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_thresholdedrelu_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_thresholdedrelu_default_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_thresholdedrelu_default_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_thresholdedrelu_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_thresholdedrelu_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tile_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tile_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tile_precomputed_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tile_precomputed_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_top_k_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_top_k_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_all_permutations_0_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_all_permutations_0_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_all_permutations_1_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_all_permutations_1_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_all_permutations_2_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_all_permutations_2_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_all_permutations_3_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_all_permutations_3_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_all_permutations_4_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_all_permutations_4_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_all_permutations_5_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_all_permutations_5_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_default_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_default_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_unsqueeze_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_unsqueeze_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_upsample_nearest_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_upsample_nearest_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_where_example_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_where_example_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor3d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor3d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor4d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor4d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor_bcast3v1d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor_bcast3v1d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor_bcast3v2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor_bcast3v2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor_bcast4v2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor_bcast4v2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor_bcast4v3d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor_bcast4v3d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor_bcast4v4d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor_bcast4v4d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_bvlc_alexnet_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_bvlc_alexnet_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_densenet121_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_densenet121_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_inception_v1_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_inception_v1_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_inception_v2_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_inception_v2_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_resnet50_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_resnet50_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_shufflenet_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_shufflenet_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_squeezenet_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_squeezenet_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_vgg19_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_vgg19_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_zfnet512_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_zfnet512_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_expand_shape_model1_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_expand_shape_model1_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_expand_shape_model2_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_expand_shape_model2_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_expand_shape_model3_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_expand_shape_model3_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_expand_shape_model4_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_expand_shape_model4_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_shrink_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_shrink_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_sign_model_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_sign_model_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_single_relu_model_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_single_relu_model_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_casesensintive_lower_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_casesensintive_lower_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_casesensintive_nochangecase_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_casesensintive_nochangecase_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_casesensintive_upper_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_casesensintive_upper_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_empty_output_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_empty_output_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_insensintive_upper_twodim_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_insensintive_upper_twodim_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_nostopwords_nochangecase_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_nostopwords_nochangecase_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool1d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool1d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool1d_stride_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool1d_stride_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool2d_stride_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool2d_stride_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool3d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool3d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool3d_stride1_pad0_gpu_input_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool3d_stride1_pad0_gpu_input_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool3d_stride_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool3d_stride_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_BatchNorm1d_3d_input_eval_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_BatchNorm1d_3d_input_eval_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_BatchNorm2d_eval_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_BatchNorm2d_eval_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_BatchNorm2d_momentum_eval_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_BatchNorm2d_momentum_eval_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_BatchNorm3d_eval_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_BatchNorm3d_eval_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_BatchNorm3d_momentum_eval_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_BatchNorm3d_momentum_eval_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ConstantPad2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ConstantPad2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_dilated_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_dilated_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_groups_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_groups_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_pad1_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_pad1_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_pad1size1_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_pad1size1_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_pad2_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_pad2_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_pad2size1_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_pad2size1_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_stride_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_stride_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_depthwise_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_depthwise_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_depthwise_padded_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_depthwise_padded_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_depthwise_strided_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_depthwise_strided_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_depthwise_with_multiplier_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_depthwise_with_multiplier_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_dilated_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_dilated_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_groups_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_groups_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_groups_thnn_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_groups_thnn_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_no_bias_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_no_bias_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_padding_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_padding_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_strided_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_strided_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_dilated_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_dilated_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_dilated_strided_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_dilated_strided_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_groups_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_groups_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_no_bias_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_no_bias_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_stride_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_stride_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_stride_padding_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_stride_padding_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ConvTranspose2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ConvTranspose2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ConvTranspose2d_no_bias_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ConvTranspose2d_no_bias_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ELU_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ELU_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Embedding_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Embedding_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Embedding_sparse_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Embedding_sparse_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_GLU_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_GLU_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_GLU_dim_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_GLU_dim_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_LeakyReLU_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_LeakyReLU_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_LeakyReLU_with_negval_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_LeakyReLU_with_negval_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Linear_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Linear_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Linear_no_bias_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Linear_no_bias_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_LogSoftmax_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_LogSoftmax_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_MaxPool1d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_MaxPool1d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_MaxPool1d_stride_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_MaxPool1d_stride_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_MaxPool2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_MaxPool2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_MaxPool3d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_MaxPool3d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_MaxPool3d_stride_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_MaxPool3d_stride_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_MaxPool3d_stride_padding_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_MaxPool3d_stride_padding_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PReLU_1d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PReLU_1d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PReLU_1d_multiparam_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PReLU_1d_multiparam_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PReLU_2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PReLU_2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PReLU_2d_multiparam_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PReLU_2d_multiparam_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PReLU_3d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PReLU_3d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PReLU_3d_multiparam_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PReLU_3d_multiparam_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PixelShuffle_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PixelShuffle_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PoissonNLLLLoss_no_reduce_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PoissonNLLLLoss_no_reduce_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ReLU_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ReLU_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ReflectionPad2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ReflectionPad2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ReplicationPad2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ReplicationPad2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_SELU_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_SELU_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Sigmoid_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Sigmoid_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Softmax_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Softmax_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Softmin_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Softmin_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Softplus_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Softplus_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Softsign_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Softsign_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Tanh_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Tanh_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ZeroPad2d_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ZeroPad2d_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_log_softmax_dim3_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_log_softmax_dim3_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_log_softmax_lastdim_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_log_softmax_lastdim_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_softmax_functional_dim3_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_softmax_functional_dim3_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_softmax_lastdim_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_softmax_lastdim_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_add_broadcast_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_add_broadcast_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_add_size1_broadcast_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_add_size1_broadcast_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_add_size1_right_broadcast_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_add_size1_right_broadcast_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_add_size1_singleton_broadcast_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_add_size1_singleton_broadcast_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_addconstant_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_addconstant_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_addmm_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_addmm_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_basic_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_basic_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_chunk_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_chunk_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_clip_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_clip_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_concat2_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_concat2_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_conv_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_conv_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_convtranspose_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_convtranspose_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_exp_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_exp_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_flatten_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_flatten_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_index_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_index_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_max_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_max_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_maxpool_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_maxpool_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_min_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_min_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_mm_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_mm_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_non_float_params_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_non_float_params_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_pad_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_pad_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_params_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_params_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_permute2_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_permute2_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_pow_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_pow_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_reduced_mean_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_reduced_mean_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_reduced_mean_keepdim_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_reduced_mean_keepdim_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_reduced_sum_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_reduced_sum_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_reduced_sum_keepdim_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_reduced_sum_keepdim_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_repeat_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_repeat_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_repeat_dim_overflow_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_repeat_dim_overflow_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_selu_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_selu_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_sqrt_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_sqrt_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_symbolic_override_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_symbolic_override_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_symbolic_override_nested_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_symbolic_override_nested_cpu' when='teardown' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_view_cpu' when='setup' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_view_cpu' when='teardown' outcome='passed'>], 'passed': [<TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_abs_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_acos_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_acos_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_add_bcast_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_add_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and3d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and4d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and_bcast3v1d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and_bcast3v2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and_bcast4v2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and_bcast4v3d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_and_bcast4v4d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmax_default_axis_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmax_default_axis_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmax_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmax_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmax_no_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmax_no_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmin_default_axis_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmin_default_axis_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmin_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmin_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmin_no_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_argmin_no_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_asin_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_asin_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_atan_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_atan_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_1d_default_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_default_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_pads_count_include_pad_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_pads_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_precomputed_pads_count_include_pad_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_precomputed_pads_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_precomputed_strides_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_strides_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_3d_default_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_basic_conv_with_padding_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_basic_conv_without_padding_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_batchnorm_epsilon_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_batchnorm_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_DOUBLE_to_FLOAT_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT_to_DOUBLE_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_ceil_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_ceil_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_default_inbounds_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_default_max_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_default_min_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_inbounds_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_outbounds_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_clip_splitbounds_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_concat_1d_axis_0_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_concat_2d_axis_0_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_concat_2d_axis_1_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_concat_3d_axis_0_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_concat_3d_axis_1_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_concat_3d_axis_2_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_constant_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_constant_pad_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_constantofshape_float_ones_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_constantofshape_int_zeros_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_conv_with_strides_and_asymmetric_padding_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_conv_with_strides_no_padding_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_conv_with_strides_padding_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_kernel_shape_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_with_kernel_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cos_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cos_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cosh_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cosh_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_div_bcast_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_div_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_div_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_dropout_default_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_dropout_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_edge_pad_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_elu_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_elu_default_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_elu_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_equal_bcast_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_equal_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_erf_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_exp_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_exp_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_expand_dim_changed_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_expand_dim_unchanged_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_flatten_axis0_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_flatten_axis1_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_flatten_axis2_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_flatten_axis3_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_flatten_default_axis_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_floor_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_floor_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gather_0_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gather_1_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gemm_broadcast_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gemm_nobroadcast_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_globalaveragepool_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_globalaveragepool_precomputed_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_globalmaxpool_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_globalmaxpool_precomputed_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_greater_bcast_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_greater_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardsigmoid_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardsigmoid_default_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardsigmoid_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_identity_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_instancenorm_epsilon_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_instancenorm_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_leakyrelu_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_leakyrelu_default_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_leakyrelu_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_less_bcast_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_less_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_log_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_log_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_logsoftmax_axis_0_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_logsoftmax_axis_1_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_logsoftmax_axis_2_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_logsoftmax_default_axis_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_logsoftmax_example_1_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_logsoftmax_large_number_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_lrn_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_lrn_default_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_matmul_2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_matmul_3d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_matmul_4d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_max_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_max_one_input_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_max_two_inputs_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_1d_default_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_default_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_pads_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_precomputed_pads_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_precomputed_strides_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_strides_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_3d_default_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mean_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mean_one_input_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mean_two_inputs_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_min_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_min_one_input_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_min_two_inputs_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mul_bcast_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mul_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mul_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_neg_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_neg_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonzero_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_not_2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_not_3d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_not_4d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or3d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or4d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or_bcast3v1d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or_bcast3v2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or_bcast4v2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or_bcast4v3d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_or_bcast4v4d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_pow_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_pow_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reciprocal_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reciprocal_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l1_default_axes_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l1_default_axes_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l1_do_not_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l1_do_not_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l1_keep_dims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l1_keep_dims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l2_default_axes_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l2_default_axes_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l2_do_not_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l2_do_not_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l2_keep_dims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_l2_keep_dims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_max_default_axes_keepdim_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_max_default_axes_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_max_do_not_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_max_do_not_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_max_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_max_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_mean_default_axes_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_mean_default_axes_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_mean_do_not_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_mean_do_not_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_mean_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_mean_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_min_default_axes_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_min_default_axes_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_min_do_not_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_min_do_not_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_min_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_min_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_default_axes_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_default_axes_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_do_not_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_do_not_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_keepdims_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_keepdims_random_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reflect_pad_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_relu_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reshape_extended_dims_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reshape_negative_dim_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reshape_one_dim_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reshape_reduced_dims_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reshape_reordered_dims_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_selu_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_selu_default_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_selu_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_shape_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_shape_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sigmoid_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sigmoid_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sign_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sin_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sin_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sinh_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sinh_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_size_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_size_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softmax_axis_0_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softmax_axis_1_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softmax_axis_2_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softmax_default_axis_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softmax_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softmax_large_number_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softplus_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softplus_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softsign_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_softsign_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_split_equal_parts_1d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_split_equal_parts_2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_split_equal_parts_default_axis_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_split_variable_parts_1d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_split_variable_parts_2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_split_variable_parts_default_axis_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sqrt_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sqrt_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_squeeze_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sub_bcast_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sub_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sub_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sum_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sum_one_input_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_sum_two_inputs_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tan_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tan_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tanh_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tanh_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_thresholdedrelu_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_thresholdedrelu_default_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_thresholdedrelu_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tile_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tile_precomputed_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_top_k_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_all_permutations_0_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_all_permutations_1_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_all_permutations_2_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_all_permutations_3_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_all_permutations_4_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_all_permutations_5_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_transpose_default_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_unsqueeze_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_upsample_nearest_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_where_example_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor3d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor4d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor_bcast3v1d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor_bcast3v2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor_bcast4v2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor_bcast4v3d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_xor_bcast4v4d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_bvlc_alexnet_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_densenet121_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_inception_v1_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_inception_v2_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_resnet50_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_shufflenet_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_squeezenet_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_vgg19_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendRealModelTest::test_zfnet512_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_expand_shape_model1_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_expand_shape_model2_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_expand_shape_model3_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_expand_shape_model4_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_sign_model_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_single_relu_model_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool1d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool1d_stride_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool2d_stride_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool3d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool3d_stride1_pad0_gpu_input_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_AvgPool3d_stride_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_BatchNorm1d_3d_input_eval_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_BatchNorm2d_eval_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_BatchNorm2d_momentum_eval_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_BatchNorm3d_eval_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_BatchNorm3d_momentum_eval_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ConstantPad2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_dilated_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_groups_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_pad1_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_pad1size1_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_pad2_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_pad2size1_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv1d_stride_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_depthwise_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_depthwise_padded_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_depthwise_strided_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_depthwise_with_multiplier_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_dilated_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_groups_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_groups_thnn_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_no_bias_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_padding_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv2d_strided_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_dilated_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_dilated_strided_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_groups_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_no_bias_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_stride_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Conv3d_stride_padding_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ConvTranspose2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ConvTranspose2d_no_bias_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ELU_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Embedding_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Embedding_sparse_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_GLU_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_GLU_dim_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_LeakyReLU_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_LeakyReLU_with_negval_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Linear_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Linear_no_bias_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_LogSoftmax_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_MaxPool1d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_MaxPool1d_stride_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_MaxPool2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_MaxPool3d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_MaxPool3d_stride_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_MaxPool3d_stride_padding_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PReLU_1d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PReLU_1d_multiparam_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PReLU_2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PReLU_2d_multiparam_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PReLU_3d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PReLU_3d_multiparam_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PixelShuffle_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_PoissonNLLLLoss_no_reduce_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ReLU_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ReflectionPad2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ReplicationPad2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_SELU_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Sigmoid_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Softmax_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Softmin_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Softplus_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Softsign_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_Tanh_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_ZeroPad2d_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_log_softmax_dim3_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_log_softmax_lastdim_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_softmax_functional_dim3_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchConvertedModelTest::test_softmax_lastdim_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_add_broadcast_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_add_size1_broadcast_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_add_size1_right_broadcast_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_add_size1_singleton_broadcast_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_addconstant_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_addmm_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_basic_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_chunk_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_clip_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_concat2_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_conv_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_convtranspose_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_exp_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_flatten_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_index_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_max_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_maxpool_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_min_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_mm_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_non_float_params_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_pad_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_params_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_permute2_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_pow_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_reduced_mean_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_reduced_mean_keepdim_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_reduced_sum_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_reduced_sum_keepdim_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_repeat_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_repeat_dim_overflow_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_selu_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_sqrt_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_symbolic_override_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_symbolic_override_nested_cpu' when='call' outcome='passed'>, <TestReport 'test_backend.py::OnnxBackendPyTorchOperatorModelTest::test_operator_view_cpu' when='call' outcome='passed'>], 'failed': [<TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_acosh_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_acosh_example_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_asinh_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_asinh_example_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_atanh_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_atanh_example_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_ceil_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_precomputed_same_upper_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_same_lower_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_averagepool_2d_same_upper_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_basic_convinteger_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_DOUBLE_to_FLOAT16_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT16_to_DOUBLE_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT16_to_FLOAT_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT_to_FLOAT16_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_FLOAT_to_STRING_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_cast_STRING_to_FLOAT_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_compress_0_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_compress_1_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_compress_default_axis_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convinteger_with_padding_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_1d_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_3d_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_dilations_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_output_shape_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_pad_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_convtranspose_pads_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_depthtospace_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_depthtospace_example_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_dequantizelinear_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_eyelike_populate_off_main_diagonal_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_eyelike_with_dtype_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_eyelike_without_dtype_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gru_defaults_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gru_seq_length_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_gru_with_initial_bias_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardmax_axis_0_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardmax_axis_1_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardmax_axis_2_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardmax_default_axis_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardmax_example_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_hardmax_one_hot_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_isinf_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_isinf_negative_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_isinf_positive_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_isnan_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_lstm_defaults_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_lstm_with_initial_bias_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_lstm_with_peepholes_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_matmulinteger_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_ceil_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_dilations_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_precomputed_same_upper_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_same_lower_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_2d_same_upper_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_with_argmax_2d_precomputed_pads_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxpool_with_argmax_2d_precomputed_strides_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxunpool_export_with_output_shape_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_maxunpool_export_without_output_shape_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mod_bcast_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mod_float_mixed_sign_example_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mod_fmod_mixed_sign_example_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mod_int64_mixed_sign_example_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mvn_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_mvn_expanded_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_center_point_box_format_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_flipped_coordinates_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_identical_boxes_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_limit_output_size_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_single_box_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_suppress_by_IOU_and_scores_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_suppress_by_IOU_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_two_batches_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_nonmaxsuppression_two_classes_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_onehot_with_axis_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_onehot_without_axis_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_pow_bcast_array_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_pow_bcast_scalar_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_prelu_broadcast_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_prelu_example_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_qlinearconv_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_qlinearmatmul_2D_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_qlinearmatmul_3D_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_quantizelinear_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_asc_axes_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_default_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_desc_axes_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_exp_default_axes_keepdims_example_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_exp_default_axes_keepdims_random_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_exp_do_not_keepdims_example_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_exp_do_not_keepdims_random_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_exp_keepdims_example_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_log_sum_exp_keepdims_random_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_prod_default_axes_keepdims_example_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_prod_default_axes_keepdims_random_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_prod_do_not_keepdims_example_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_prod_do_not_keepdims_random_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_prod_keepdims_example_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_prod_keepdims_random_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_square_default_axes_keepdims_example_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_square_default_axes_keepdims_random_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_square_do_not_keepdims_example_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_square_do_not_keepdims_random_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_square_keepdims_example_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reduce_sum_square_keepdims_random_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_resize_downsample_linear_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_resize_downsample_nearest_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_resize_nearest_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_resize_upsample_linear_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_resize_upsample_nearest_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reversesequence_batch_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_reversesequence_time_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_rnn_seq_length_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_roialign_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_scan9_sum_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_scan_sum_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_scatter_with_axis_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_scatter_without_axis_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_shrink_hard_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_shrink_soft_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_simple_rnn_defaults_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_simple_rnn_with_initial_bias_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_default_axes_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_default_steps_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_end_out_of_bounds_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_neg_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_neg_steps_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_slice_start_out_of_bounds_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_casesensintive_lower_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_casesensintive_nochangecase_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_casesensintive_upper_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_empty_output_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_export_monday_insensintive_upper_twodim_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_strnormalizer_nostopwords_nochangecase_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_batch_onlybigrams_skip0_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_batch_onlybigrams_skip5_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_batch_uniandbigrams_skip5_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_only_bigrams_skip0_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_onlybigrams_levelempty_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_onlybigrams_skip5_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendNodeModelTest::test_tfidfvectorizer_tf_uniandbigrams_skip5_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_shrink_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_casesensintive_lower_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_casesensintive_nochangecase_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_casesensintive_upper_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_empty_output_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_monday_insensintive_upper_twodim_cpu' when='call' outcome='failed'>, <TestReport 'test_backend.py::OnnxBackendSimpleModelTest::test_strnorm_model_nostopwords_nochangecase_cpu' when='call' outcome='failed'>]}"